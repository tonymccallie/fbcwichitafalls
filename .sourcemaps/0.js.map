{"version":3,"sources":["../../src/pages/times/times.module.ts","../../node_modules/@ionic-native/launch-navigator/index.js","../../src/pages/times/times.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AAC6B;AAajE,IAAa,eAAe;IAA5B;IAA+B,CAAC;IAAD,sBAAC;AAAD,CAAC;AAAnB,eAAe;IAX3B,+DAAQ,CAAC;QACT,YAAY,EAAE;YACb,yDAAS;SACT;QACD,OAAO,EAAE;YACR,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;SACnC;QACD,SAAS,EAAE;YACV,uFAAe;SACf;KACD,CAAC;GACW,eAAe,CAAI;AAAJ;;;;;;;;;;;AChB5B;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C,uBAAuB;AACvB,iBAAiB;AACjB;AACA,0EAA0E,QAAQ;AAClF;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA,+DAA+D,QAAQ;AACvE;AACA;AACA,iBAAiB;AACjB;AACA,2DAA2D,QAAQ;AACnE;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA,kEAAkE,QAAQ;AAC1E;AACA;AACA,wBAAwB;AACxB,iBAAiB;AACjB;AACA,wEAAwE,QAAQ;AAChF;AACA;AACA,mBAAmB,OAAO;AAC1B,wBAAwB;AACxB,iBAAiB;AACjB;AACA,gFAAgF,QAAQ;AACxF;AACA;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA,4EAA4E,QAAQ;AACpF;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA,2EAA2E,QAAQ;AACnF;AACA;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA,wEAAwE,QAAQ;AAChF;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA,4EAA4E,QAAQ;AACpF;AACA;AACA;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA,6EAA6E,QAAQ;AACrF;AACA,2BAA2B;AAC3B,uBAAuB;AACvB;AACA,4EAA4E;AAC5E;AACA,SAAS,kEAAmB;AAC5B;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,qFAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,qFAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,qFAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,qFAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,qFAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,qFAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,qFAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,qFAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR,iC;;;;;;;;;;;;;;;;;;;;;AC5P0C;AACe;AACQ;AAOjE,IAAa,SAAS;IAErB,mBAAmB,OAAsB,EAAS,SAAoB,EAAU,eAAgC;QAA7F,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,oBAAe,GAAf,eAAe,CAAiB;IAChH,CAAC;IAED,uBAAG,GAAH,UAAI,QAAgB;QACnB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACzC,CAAC;IAED,kCAAc,GAAd;QACC,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IACzC,CAAC;IAEF,gBAAC;AAAD,CAAC;AAbY,SAAS;IAJrB,gEAAS,CAAC;QACV,QAAQ,EAAE,YAAY;OACG;KACzB,CAAC;cAG+G;AAWhH;SAbY,SAAS,e","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TimesPage } from './times';\nimport { LaunchNavigator } from '@ionic-native/launch-navigator';\n\n@NgModule({\n\tdeclarations: [\n\t\tTimesPage,\n\t],\n\timports: [\n\t\tIonicPageModule.forChild(TimesPage),\n\t],\n\tproviders: [\n\t\tLaunchNavigator\n\t]\n})\nexport class TimesPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/times/times.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Launch Navigator\n * @description\n * Requires Cordova plugin: uk.co.workingedge.phonegap.plugin.launchnavigator. For more info, please see the [LaunchNavigator plugin docs](https://github.com/dpa99c/phonegap-launch-navigator).\n *\n * @usage\n * Please refer to the plugin's repo for detailed usage. This docs page only explains the Native wrapper.\n *\n * ```typescript\n * import { LaunchNavigator, LaunchNavigatorOptions } from '@ionic-native/launch-navigator';\n *\n * constructor(private launchNavigator: LaunchNavigator) { }\n *\n * ...\n *\n * let options: LaunchNavigatorOptions = {\n *   start: 'London, ON',\n *   app: LaunchNavigator.APPS.UBER\n * };\n *\n * this.launchNavigator.navigate('Toronto, ON', options)\n *   .then(\n *     success => console.log('Launched navigator'),\n *     error => console.log('Error launching navigator', error)\n *   );\n * ```\n * @interfaces\n * LaunchNavigatorOptions\n * PromptsOptions\n * RememberChoiceOptions\n * AppSelectionOptions\n * UserChoice\n * UserPrompted\n * AppSelection\n */\nvar LaunchNavigator = (function (_super) {\n    __extends(LaunchNavigator, _super);\n    function LaunchNavigator() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.APP = {\n            USER_SELECT: 'user_select',\n            APPLE_MAPS: 'apple_maps',\n            GOOGLE_MAPS: 'google_maps',\n            WAZE: 'waze',\n            CITYMAPPER: 'citymapper',\n            NAVIGON: 'navigon',\n            TRANSIT_APP: 'transit_app',\n            YANDEX: 'yandex',\n            UBER: 'uber',\n            TOMTOM: 'tomtom',\n            BING_MAPS: 'bing_maps',\n            SYGIC: 'sygic',\n            HERE_MAPS: 'here_maps',\n            MOOVIT: 'moovit'\n        };\n        _this.TRANSPORT_MODE = {\n            DRIVING: 'driving',\n            WALKING: 'walking',\n            BICYCLING: 'bicycling',\n            TRANSIT: 'transit'\n        };\n        return _this;\n    }\n    /**\n     * Launches navigator app\n     * @param destination {string|number[]} Location name or coordinates (as string or array)\n     * @param options {LaunchNavigatorOptions}\n     * @returns {Promise<any>}\n     */\n    LaunchNavigator.prototype.navigate = function (destination, options) { return; };\n    /**\n     * Determines if the given app is installed and available on the current device.\n     * @param app {string}\n     * @returns {Promise<any>}\n     */\n    LaunchNavigator.prototype.isAppAvailable = function (app) { return; };\n    /**\n     * Returns a list indicating which apps are installed and available on the current device.\n     * @returns {Promise<string[]>}\n     */\n    LaunchNavigator.prototype.availableApps = function () { return; };\n    /**\n     * Returns the display name of the specified app.\n     * @param app {string}\n     * @returns {string}\n     */\n    LaunchNavigator.prototype.getAppDisplayName = function (app) { return; };\n    /**\n     * Returns list of supported apps on a given platform.\n     * @param platform {string}\n     * @returns {string[]}\n     */\n    LaunchNavigator.prototype.getAppsForPlatform = function (platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of transport mode.\n     * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    LaunchNavigator.prototype.supportsTransportMode = function (app, platform) { return; };\n    /**\n     * Returns the list of transport modes supported by an app on a given platform.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {string[]}\n     */\n    LaunchNavigator.prototype.getTransportModes = function (app, platform) { return; };\n    /**\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    LaunchNavigator.prototype.supportsDestName = function (app, platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of start location.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    LaunchNavigator.prototype.supportsStart = function (app, platform) { return; };\n    /**\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    LaunchNavigator.prototype.supportsStartName = function (app, platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of launch mode.\n     * Note that currently only Google Maps on Android does.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    LaunchNavigator.prototype.supportsLaunchMode = function (app, platform) { return; };\n    /**\n     * @param destination {string | number[]}\n     * @param options {LaunchNavigatorOptions}\n     */\n    LaunchNavigator.prototype.userSelect = function (destination, options) { };\n    LaunchNavigator.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    LaunchNavigator.ctorParameters = function () { return []; };\n    __decorate([\n        Cordova({\n            successIndex: 2,\n            errorIndex: 3\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"navigate\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"isAppAvailable\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"availableApps\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", String)\n    ], LaunchNavigator.prototype, \"getAppDisplayName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Array)\n    ], LaunchNavigator.prototype, \"getAppsForPlatform\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsTransportMode\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Array)\n    ], LaunchNavigator.prototype, \"getTransportModes\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsDestName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsStart\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsStartName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsLaunchMode\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], LaunchNavigator.prototype, \"userSelect\", null);\n    LaunchNavigator = __decorate([\n        Plugin({\n            pluginName: 'LaunchNavigator',\n            plugin: 'uk.co.workingedge.phonegap.plugin.launchnavigator',\n            pluginRef: 'launchnavigator',\n            repo: 'https://github.com/dpa99c/phonegap-launch-navigator',\n            platforms: ['Android', 'iOS', 'Windows', 'Windows Phone 8']\n        })\n    ], LaunchNavigator);\n    return LaunchNavigator;\n}(IonicNativePlugin));\nexport { LaunchNavigator };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/launch-navigator/index.js\n// module id = 440\n// module chunks = 0 1","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { LaunchNavigator } from '@ionic-native/launch-navigator';\n\n@IonicPage({\n\tsegment: 'times'\n})\n@Component({\n\tselector: 'page-times',\n\ttemplateUrl: 'times.html',\n})\nexport class TimesPage {\n\n\tconstructor(public navCtrl: NavController, public navParams: NavParams, private launchNavigator: LaunchNavigator) {\n\t}\n\n\tmap(location: string) {\n\t\tthis.launchNavigator.navigate(location);\n\t}\n\n\tionViewDidLoad() {\n\t\tconsole.log('ionViewDidLoad TimesPage');\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/times/times.ts"],"sourceRoot":""}